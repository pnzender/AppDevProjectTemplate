{"ast":null,"code":"// src/pages/CreateProject.js\nimport React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CreateProject=()=>{const[formData,setFormData]=useState({name:'',description:'',projectId:'',useExistingProject:false});const handleInputChange=event=>{const{name,value,type,checked}=event.target;setFormData({...formData,[name]:type==='checkbox'?checked:value});};const handleSubmit=async event=>{event.preventDefault();try{const response=await fetch('/create_project',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)});if(!response.ok){throw new Error('Network response was not ok');}const result=await response.json();console.log('Project created:',result);// Optionally, handle the response (e.g., show a success message)\n}catch(error){console.error('Error creating project:',error);// Optionally, handle the error (e.g., show an error message)\n}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Create New Project\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Name:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:formData.name,onChange:handleInputChange,required:true})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Description:\",/*#__PURE__*/_jsx(\"textarea\",{name:\"description\",value:formData.description,onChange:handleInputChange,required:true})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"useExistingProject\",checked:formData.useExistingProject,onChange:handleInputChange}),\"Use Existing Project\"]})}),formData.useExistingProject?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Project ID:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"projectId\",value:formData.projectId,onChange:handleInputChange})]})}):/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"New Project will be created.\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]})]});};export default CreateProject;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","CreateProject","formData","setFormData","name","description","projectId","useExistingProject","handleInputChange","event","value","type","checked","target","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","console","log","error","children","onSubmit","onChange","required"],"sources":["D:/02_Academic/01_MSITM/03_Courses/Advanced_Programming/Project_final_mine/client/src/pages/Project.js"],"sourcesContent":["// src/pages/CreateProject.js\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst CreateProject = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    projectId: '',\r\n    useExistingProject: false,\r\n  });\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value, type, checked } = event.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('/create_project', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log('Project created:', result);\r\n      // Optionally, handle the response (e.g., show a success message)\r\n    } catch (error) {\r\n      console.error('Error creating project:', error);\r\n      // Optionally, handle the error (e.g., show an error message)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Create New Project</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>\r\n            Name:\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <div>\r\n          <label>\r\n            Description:\r\n            <textarea\r\n              name=\"description\"\r\n              value={formData.description}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <div>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"useExistingProject\"\r\n              checked={formData.useExistingProject}\r\n              onChange={handleInputChange}\r\n            />\r\n            Use Existing Project\r\n          </label>\r\n        </div>\r\n\r\n        {formData.useExistingProject ? (\r\n          <div>\r\n            <label>\r\n              Project ID:\r\n              <input\r\n                type=\"text\"\r\n                name=\"projectId\"\r\n                value={formData.projectId}\r\n                onChange={handleInputChange}\r\n              />\r\n            </label>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <p>New Project will be created.</p>\r\n          </div>\r\n        )}\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateProject;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}